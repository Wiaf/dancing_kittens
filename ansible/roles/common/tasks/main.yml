---
- include_vars: credentials.yml

- name: Make sure we have a 'wheel' group
  group:
    name: wheel
    state: present

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

- name: Create target directory
  file:
    path: "/home/wiaf/.ssh"
    state: directory
    mode: 0755

- name: "Create user accounts and add users to groups"
  user:
    name: "{{ item.name }}"
    groups: " {{ item.groups }}"
    append: yes
    shell: /bin/bash
  loop: "{{ users }}"

- name: Deploy authorized keys
  copy:
    src: files/authorized_keys
    dest: /home/wiaf/.ssh/authorized_keys
    owner: wiaf
    group: wiaf
    mode: 0644
    force: yes
    backup: yes
  become: yes

- name: Disable Password Authentication
  lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^PasswordAuthentication'
      line: "PasswordAuthentication no"
      state: present
      backup: yes

- name: Disable Root Login
  lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: "PermitRootLogin no"
      state: present
      backup: yes

  notify:
    - restart ssh

- name: fix apt package cache size
  lineinfile:
    dest: /etc/apt/apt.conf
    regexp: '^APT::Cache-Limit'
    line: 'APT::Cache-Limit "100000000";'
    state: present
    create: yes

- name: Update System
  apt:
    upgrade: dist

- name: Install required common packages
  apt:
    name: "{{ packages_common }}"
    state: present
    install_recommends: yes

- name: Install required  host specific packages
  apt:
    name: "{{ packages_host }}"
    state: present
    install_recommends: yes
  when: packages_host is defined

- name: setting editor correctly
  block:
    - name: stat current editor
      stat:
        path: /etc/alternatives/editor
      register: alternatives_editor

    - name: set default editor
      command: update-alternatives --set editor /usr/bin/vim.basic
      when: alternatives_editor.stat.exists == True and alternatives_editor.stat.lnk_source != "/usr/bin/vim.basic"
  ignore_errors: yes
  tags: editor

- name: update /etc/hostname
  lineinfile:
    path: /etc/hostname
    line: "{{ hostname }}"
    state: present

- name: remove anything but new hostname from /etc/hostname
  lineinfile:
    dest: /etc/hostname
    regexp: "^(?!{{ hostname }})"
    state: absent
  register: etc_hostname

- name: Set motd
  template:
    src: motd.j2
    dest: /etc/motd

- name: Deploy userscripts
  copy:
    src: files/
    dest: /usr/local/bin/
    mode: +x
    force: yes
  become: yes
  tags: common_config


- name: update hostname in system
  command: hostname -F /etc/hostname

- name: hostname has changed - remove entry or old hostname from /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ ansible_hostname }}"
    state: absent
  become: yes
  when: hostname != ansible_hostname